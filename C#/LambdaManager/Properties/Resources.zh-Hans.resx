<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="Execute" xml:space="preserve">
    <value>执行</value>
  </data>
  <data name="ConfigLoaded" xml:space="preserve">
    <value>应用组件加载完毕</value>
  </data>
  <data name="Expired" xml:space="preserve">
    <value>应用许可已过期，请联系厂家获得新的许可期限或者新的试用版本</value>
  </data>
  <data name="StartFatalError" xml:space="preserve">
    <value>应用启动时遇到严重错误，详细情况请查看日志</value>
  </data>
  <data name="ClassNameWanted" xml:space="preserve">
    <value>应该使用类名称</value>
  </data>
  <data name="ReferredArgsNotSpecified" xml:space="preserve">
    <value>引用的输入数据未指定对应流程的函数参数位置</value>
  </data>
  <data name="STLMapNotSupport" xml:space="preserve">
    <value>事件对象不支持二进制类型数据传递</value>
  </data>
  <data name="EventTypeNotSpecified" xml:space="preserve">
    <value>事件类型未指定</value>
  </data>
  <data name="OutputType" xml:space="preserve">
    <value>输出参数类型</value>
  </data>
  <data name="Undefined" xml:space="preserve">
    <value>未定义</value>
  </data>
  <data name="Empty" xml:space="preserve">
    <value>为空</value>
  </data>
  <data name="Notice" xml:space="preserve">
    <value>提醒</value>
  </data>
  <data name="InputType" xml:space="preserve">
    <value>输入参数类型</value>
  </data>
  <data name="ReferredAction" xml:space="preserve">
    <value>引用的函数</value>
  </data>
  <data name="Reference" xml:space="preserve">
    <value>引用</value>
  </data>
  <data name="Referring" xml:space="preserve">
    <value>引用</value>
  </data>
  <data name="Async" xml:space="preserve">
    <value>异步设置</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>文件</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>未找到</value>
  </data>
  <data name="EventDataNotSupport" xml:space="preserve">
    <value>事件传递的数据必须是JSON类型</value>
  </data>
  <data name="PleaseCheck" xml:space="preserve">
    <value>请检查</value>
  </data>
  <data name="Signature" xml:space="preserve">
    <value>签名</value>
  </data>
  <data name="StartUp" xml:space="preserve">
    <value>启动</value>
  </data>
  <data name="Component" xml:space="preserve">
    <value>模块</value>
  </data>
  <data name="Procedure" xml:space="preserve">
    <value>流程</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>类名称</value>
  </data>
  <data name="Lib" xml:space="preserve">
    <value>库</value>
  </data>
  <data name="ConfigLoading" xml:space="preserve">
    <value>开始加载应用组件</value>
  </data>
  <data name="EntryPoint" xml:space="preserve">
    <value>接入点</value>
  </data>
  <data name="or" xml:space="preserve">
    <value>或</value>
  </data>
  <data name="DuplicateLib" xml:space="preserve">
    <value>和其他库名相同但路径不一致，系统将加载其中一个库</value>
  </data>
  <data name="OriginInputsNotMatch" xml:space="preserve">
    <value>和定义的输入参数不匹配</value>
  </data>
  <data name="NotExportProc" xml:space="preserve">
    <value>函数不是调用有导出的流程</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>函数</value>
  </data>
  <data name="ActionTimesInputCountNotMatch" xml:space="preserve">
    <value>多次循环函数的输入数组长度不足</value>
  </data>
  <data name="ActionTimesInputTypeNotMatch" xml:space="preserve">
    <value>多次循环函数的输入数据不是数组类型</value>
  </data>
  <data name="ScheduleStart" xml:space="preserve">
    <value>定时执行</value>
  </data>
  <data name="ScheduleEnd" xml:space="preserve">
    <value>定时完成</value>
  </data>
  <data name="ScheduleTrigger" xml:space="preserve">
    <value>定时触发</value>
  </data>
  <data name="of" xml:space="preserve">
    <value>的</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>导入</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>导出</value>
  </data>
  <data name="OpenFiles" xml:space="preserve">
    <value>打开文件</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>错误</value>
  </data>
  <data name="CreateFailed" xml:space="preserve">
    <value>创建失败</value>
  </data>
  <data name="RaiseKeys" xml:space="preserve">
    <value>触发事件键值</value>
  </data>
  <data name="Init" xml:space="preserve">
    <value>初始化</value>
  </data>
  <data name="ArgType" xml:space="preserve">
    <value>参数类型</value>
  </data>
  <data name="SystemNotSupport2" xml:space="preserve">
    <value>参数个数大于6的函数</value>
  </data>
  <data name="SystemNotSupport1" xml:space="preserve">
    <value>参数个数大于4的函数不支持使用4字节以下的数据类型</value>
  </data>
  <data name="Arguments" xml:space="preserve">
    <value>参数</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>菜单</value>
  </data>
  <data name="AsyncWithEventDataNotSupport" xml:space="preserve">
    <value>不支持需要事件对象的情况</value>
  </data>
  <data name="AsyncWithOutputReferredNotSupport" xml:space="preserve">
    <value>不支持输出数据被引用的情况</value>
  </data>
  <data name="NotSupported" xml:space="preserve">
    <value>不支持</value>
  </data>
  <data name="NotMatched" xml:space="preserve">
    <value>不匹配</value>
  </data>
  <data name="EventArgTypeNotMatch" xml:space="preserve">
    <value>不符合事件处理函数规范</value>
  </data>
  <data name="NotExist" xml:space="preserve">
    <value>不存在</value>
  </data>
  <data name="AsPointer" xml:space="preserve">
    <value>按指针类型处理</value>
  </data>
  <data name="Comma" xml:space="preserve">
    <value>：</value>
  </data>
  <data name="FpsRunning" xml:space="preserve">
    <value>1</value>
  </data>
</root>